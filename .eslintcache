[{"C:\\Users\\anng\\Documents\\dev\\react\\surveys\\src\\index.tsx":"1","C:\\Users\\anng\\Documents\\dev\\react\\surveys\\src\\reportWebVitals.ts":"2","C:\\Users\\anng\\Documents\\dev\\react\\surveys\\src\\App.tsx":"3","C:\\Users\\anng\\Documents\\dev\\react\\surveys\\src\\components\\Question.tsx":"4","C:\\Users\\anng\\Documents\\dev\\react\\surveys\\src\\models\\Question.ts":"5","C:\\Users\\anng\\Documents\\dev\\react\\surveys\\src\\components\\Types\\QuestionRadio.tsx":"6","C:\\Users\\anng\\Documents\\dev\\react\\surveys\\src\\components\\Types\\QuestionCheckBox.tsx":"7","C:\\Users\\anng\\Documents\\dev\\react\\surveys\\src\\components\\Types\\QuestionBool.tsx":"8","C:\\Users\\anng\\Documents\\dev\\react\\surveys\\src\\components\\Survey.tsx":"9"},{"size":500,"mtime":1608595867800,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":339,"mtime":1608607647184,"results":"13","hashOfConfig":"11"},{"size":2426,"mtime":1608609974066,"results":"14","hashOfConfig":"11"},{"size":345,"mtime":1608578487402,"results":"15","hashOfConfig":"11"},{"size":1018,"mtime":1608608663530,"results":"16","hashOfConfig":"11"},{"size":1177,"mtime":1608605251095,"results":"17","hashOfConfig":"11"},{"size":402,"mtime":1608599878191,"results":"18","hashOfConfig":"11"},{"size":1856,"mtime":1608610308877,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"fsex92",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\anng\\Documents\\dev\\react\\surveys\\src\\index.tsx",[],["40","41"],"C:\\Users\\anng\\Documents\\dev\\react\\surveys\\src\\reportWebVitals.ts",[],"C:\\Users\\anng\\Documents\\dev\\react\\surveys\\src\\App.tsx",[],"C:\\Users\\anng\\Documents\\dev\\react\\surveys\\src\\components\\Question.tsx",["42"],"C:\\Users\\anng\\Documents\\dev\\react\\surveys\\src\\models\\Question.ts",[],"C:\\Users\\anng\\Documents\\dev\\react\\surveys\\src\\components\\Types\\QuestionRadio.tsx",[],"C:\\Users\\anng\\Documents\\dev\\react\\surveys\\src\\components\\Types\\QuestionCheckBox.tsx",["43"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nimport { Question } from \"../../models/Question\";\r\n\r\nexport default function QuestionCheckBox(props: {\r\n  quest: Question;\r\n  onChange: any;\r\n  setValue: any;\r\n}): JSX.Element {\r\n  var aux: boolean[] = [];\r\n  props.quest.options.map(() => aux.push(false));\r\n  const [state, setState] = useState(aux);\r\n  const handleChange = (event: any) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.setValue(JSON.stringify(state));\r\n  }, [state]);\r\n\r\n  if (props.quest.options === []) return <Fragment>No options</Fragment>;\r\n  return (\r\n    <Fragment>\r\n      {props.quest.options.map((option, key) => {\r\n        return (\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={state[key]}\r\n                onChange={handleChange}\r\n                name={key + \"\"}\r\n              />\r\n            }\r\n            label={option}\r\n          />\r\n        );\r\n      })}\r\n    </Fragment>\r\n  );\r\n}\r\n","C:\\Users\\anng\\Documents\\dev\\react\\surveys\\src\\components\\Types\\QuestionBool.tsx",[],"C:\\Users\\anng\\Documents\\dev\\react\\surveys\\src\\components\\Survey.tsx",["44"],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":30,"column":6,"nodeType":"51","endLine":30,"endColumn":14,"suggestions":"52"},{"ruleId":"49","severity":1,"message":"50","line":21,"column":6,"nodeType":"51","endLine":21,"endColumn":13,"suggestions":"53"},{"ruleId":"54","severity":1,"message":"55","line":8,"column":8,"nodeType":"56","messageId":"57","endLine":8,"endColumn":13},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["60"],["61"],"@typescript-eslint/no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},{"desc":"64","fix":"65"},"Update the dependencies array to be: [answer, props]",{"range":"66","text":"67"},"Update the dependencies array to be: [props, state]",{"range":"68","text":"69"},[1078,1086],"[answer, props]",[679,686],"[props, state]"]